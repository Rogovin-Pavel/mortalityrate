{"version":3,"sources":["components/data/read-text-file.js","components/pagination/index.js","components/pagination/pagination.js","components/item-list/index.js","components/item-list/item-list.js","components/chart/index.js","components/chart/chart.js","components/app/index.js","components/app/app.js","index.js"],"names":["readTextFile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","apply","this","arguments","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","react_default","createElement","className","map","number","key","onClick","ItemList","onClickItem","item","components_pagination","Chart","state","chartData","labels","datasets","prevProps","selectedItem","props","newData","setState","label","backgroundColor","console","log","es","width","height","options","title","display","text","fontSize","legend","position","Component","App","currentPage","getSelectedItem","id","_this","getData","then","objectSpread","uuid","_this$state","indexOfLastItem","indexOfFirstItem","currentItems","slice","components_item_list","length","components_chart","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e581f00d.chunk.js","sourcesContent":["const readTextFile = async () => { \r\n    const res = await fetch(`./data.json`);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch` +\r\n          `, received ${res.status}`)\r\n      }\r\n    const data = await res.json();\r\n    return data['Country estimates'];\r\n};\r\n\r\nexport default readTextFile;","import Pagination from './pagination';\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for(let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item\">\r\n            <div onClick={() => paginate(number)} className=\"page-link\">{number}</div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n\r\n\r\n","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport './item-list.css';\r\n\r\nimport Pagination from './../pagination';\r\n\r\nconst ItemList = ({ data, onClickItem, itemsPerPage, totalItems, paginate }) => {\r\n  const listClassName = \"list-group-item d-flex justify-content-between align-items-center\";\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <ul className=\"list-group\">\r\n        {data.map((item) => {\r\n          return <li className={listClassName} key={item['id']}\r\n                    onClick={() => onClickItem(item['id'])}>{`${item['Country Name']}, UB: ${item['Uncertainty bounds*']}` }</li>\r\n        })}\r\n      </ul>\r\n      <Pagination itemsPerPage={itemsPerPage} totalItems={150} paginate={paginate}/>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ItemList;","import Chart from './chart';\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './chart.css';\r\nexport default class Chart extends Component {\r\n  state = {\r\n    chartData: {\r\n      labels: null,\r\n      datasets: null\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.selectedItem !== this.props.selectedItem) {\r\n      const { selectedItem } = this.props;\r\n      const newData = [\r\n                        selectedItem['2010'],\r\n                        selectedItem['2011'],\r\n                        selectedItem['2012'],\r\n                        selectedItem['2013'],\r\n                        selectedItem['2014'],\r\n                        selectedItem['2015'],\r\n                        selectedItem['2016'],\r\n                        selectedItem['2017']\r\n                      ]\r\n\r\n      this.setState({\r\n        chartData: {\r\n          labels: ['2010 year', '2011 year', '2012 year', '2013 year', '2014 year', '2015 year', '2016 year', '2017 year'],\r\n          datasets: [\r\n            {\r\n              label: 'IMR',\r\n              data: newData,\r\n              backgroundColor: '#E74C3C'\r\n            }\r\n          ]\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.props;\r\n    if(selectedItem) {\r\n      console.log(selectedItem)\r\n      return (\r\n        <div className=\"chart\">\r\n          <h4 className=\"text\">Country name: {selectedItem['Country Name']}</h4>\r\n          <h5 className=\"text\">Uncertainty bounds: {selectedItem['Uncertainty bounds*']}</h5>\r\n          <Line data={this.state.chartData} \r\n                       width={3}\r\n                       height={2}\r\n                       options={{\r\n                         title: {\r\n                           display: true,\r\n                           text: 'Infant Mortality Rate',\r\n                           fontSize:25\r\n                         },\r\n                         legend: {\r\n                           display: true,\r\n                           position: 'right'\r\n                         }\r\n                       }}/>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"chart text\">Select from the list, please.</div>\r\n    )\r\n  }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport readTextFile from './../data/read-text-file';\r\nimport uuid from 'uuid';\r\n\r\nimport ItemList from './../item-list';\r\nimport Chart from './../chart';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: null,\r\n    selectedItem: null,\r\n    currentPage: 1, \r\n    itemsPerPage: 12\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getSelectedItem = (id) => {\r\n    let selectedItem;\r\n    this.state.data.map((item) => {\r\n      if(item['id'] === id) {\r\n        selectedItem = item;\r\n        return selectedItem;\r\n      }\r\n    });\r\n    this.setState({\r\n      selectedItem\r\n    });\r\n  }\r\n\r\n  getData = () => {\r\n    readTextFile()\r\n      .then((data) => {\r\n        const newData = data.map((item) => {\r\n          return {\r\n            ...item,\r\n            id: uuid()\r\n          };\r\n        });\r\n        this.setState({\r\n          data: newData\r\n        });\r\n      });\r\n  }\r\n\r\n  paginate = (currentPage) => {\r\n    this.setState({\r\n      currentPage\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data, selectedItem, currentPage, itemsPerPage } = this.state;\r\n    \r\n    if(data) {\r\n\r\n      // Get current items\r\n      const indexOfLastItem = currentPage * itemsPerPage;\r\n      const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n      const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n      return (\r\n        <main className=\"container\">\r\n          <section className=\"jumbotron main-section\">\r\n            <ItemList data={currentItems} \r\n                      onClickItem={this.getSelectedItem} \r\n                      itemsPerPage={itemsPerPage} \r\n                      totalItems={data.length} \r\n                      paginate={this.paginate}/>\r\n            <Chart selectedItem={selectedItem}/> \r\n          </section>\r\n        </main>\r\n      );\r\n    } else {\r\n      return <div>Loading...</div>\r\n    }\r\n    \r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}