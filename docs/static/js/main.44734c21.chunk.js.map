{"version":3,"sources":["components/data/read-text-file.js","components/pagination/index.js","components/pagination/pagination.js","components/item-list/index.js","components/item-list/item-list.js","components/chart/index.js","components/chart/chart.js","components/app/index.js","components/app/app.js","index.js"],"names":["readTextFile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","apply","this","arguments","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","react_default","createElement","className","class","map","number","key","onClick","ItemList","onClickItem","item","components_pagination","Chart","state","chartData","prevProps","selectedItem","props","setState","es","width","height","options","title","display","text","fontSize","legend","position","Component","App","currentPage","getSelectedItem","id","_this","getData","then","transformData","jointISO","newItem","newData","countISO","newItems","COLORS","length","labels","countryName","ISO","uuid","datasets","label","backgroundColor","_this$state","console","log","indexOfLastItem","indexOfFirstItem","currentItems","slice","components_item_list","components_chart","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.44734c21.chunk.js","sourcesContent":["const readTextFile = async () => { \r\n    const res = await fetch(`./data.json`);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch` +\r\n          `, received ${res.status}`)\r\n      }\r\n    const data = await res.json();\r\n    return data['Country estimates'];\r\n};\r\n\r\nexport default readTextFile;","import Pagination from './pagination';\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for(let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li class=\"page-item\">\r\n          <div class=\"page-link\">&laquo;</div>\r\n        </li>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item\">\r\n            <div onClick={() => paginate(number)} className=\"page-link\">{number}</div>\r\n          </li>\r\n        ))}\r\n        <li class=\"page-item\">\r\n          <div class=\"page-link\">&raquo;</div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n\r\n\r\n","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport './item-list.css';\r\n\r\nimport Pagination from './../pagination';\r\n\r\nconst ItemList = ({ data, onClickItem, itemsPerPage, totalItems, paginate }) => {\r\n  const listClassName = \"list-group-item d-flex justify-content-between align-items-center\";\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <ul className=\"list-group\">\r\n        {data.map((item) => {\r\n          return <li className={listClassName} key={item['id']}\r\n                    onClick={() => onClickItem(item['id'])}>{`${item['countryName']}` }</li>\r\n        })}\r\n      </ul>\r\n      <Pagination itemsPerPage={itemsPerPage} totalItems={132} paginate={paginate}/>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ItemList;","import Chart from './chart';\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './chart.css';\r\nexport default class Chart extends Component {\r\n  state = {\r\n    chartData: null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.selectedItem !== this.props.selectedItem) {\r\n      const { selectedItem } = this.props;\r\n\r\n      this.setState({\r\n        chartData: selectedItem\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.props;\r\n\r\n    if (!selectedItem) {\r\n      return (\r\n        <div className=\"chart text\">Select from the list, please.</div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"chart\">\r\n        <h4 className=\"text\">Country name: {selectedItem['Country Name']}</h4>\r\n        <h5 className=\"text\">Uncertainty bounds: {selectedItem['Uncertainty bounds*']}</h5>\r\n        <Line data={this.state.chartData} \r\n                     width={3}\r\n                     height={2}\r\n                     options={{\r\n                       title: {\r\n                         display: true,\r\n                         text: 'Infant Mortality Rate',\r\n                         fontSize:25\r\n                       },\r\n                       legend: {\r\n                         display: true,\r\n                         position: 'right'\r\n                       }\r\n                     }}/>\r\n      </div>\r\n    )\r\n  }\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport readTextFile from './../data/read-text-file';\r\nimport uuid from 'uuid';\r\n\r\nimport ItemList from './../item-list';\r\nimport Chart from './../chart';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: null,\r\n    selectedItem: null,\r\n    currentPage: 1, \r\n    itemsPerPage: 12\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getSelectedItem = (id) => {\r\n    let selectedItem;\r\n    this.state.data.map((item) => {\r\n      if(item['id'] === id) {\r\n        selectedItem = item;\r\n        return selectedItem;\r\n      }\r\n    });\r\n    this.setState({\r\n      selectedItem\r\n    });\r\n  }\r\n\r\n  getData = () => {\r\n    readTextFile()\r\n      .then((data) => {\r\n        this.setState({\r\n          data: this.transformData(data)\r\n        });\r\n      });\r\n  }\r\n\r\n  transformData = (data) => {\r\n    let jointISO, newItem, newData;\r\n    let countISO = 0;\r\n    let newItems = [];\r\n    const COLORS = ['#E74C3C', 'white', 'blue'];\r\n    for (let i = 0; i < data.length; i++) {\r\n\r\n      newData = [\r\n        data[i]['2010'],\r\n        data[i]['2011'],\r\n        data[i]['2012'],\r\n        data[i]['2013'],\r\n        data[i]['2014'],\r\n        data[i]['2015'],\r\n        data[i]['2016'],\r\n        data[i]['2017']\r\n      ];\r\n\r\n      if(data[i]['ISO Code'] !== jointISO) {\r\n\r\n        jointISO = data[i]['ISO Code'];\r\n        \r\n        newItem = {\r\n          labels: ['2010 year', '2011 year', '2012 year', '2013 year', '2014 year', '2015 year', '2016 year', '2017 year'],\r\n          countryName: data[i]['Country Name'],\r\n          ISO: data[i]['ISO Code'],\r\n          id: uuid(),\r\n          datasets: [\r\n            {\r\n              label: `IMR (${data[i]['Uncertainty bounds*']})`,\r\n              data: newData,\r\n              backgroundColor: COLORS[countISO]\r\n            }\r\n          ]\r\n        }\r\n      } else {\r\n        newItem['datasets'].push({\r\n          label: `IMR (${data[i]['Uncertainty bounds*']})`,\r\n          data: newData,\r\n          backgroundColor: COLORS[countISO++]\r\n        });\r\n      }\r\n      countISO++\r\n      if(data[i]['Uncertainty bounds*'] === 'Upper') {\r\n        newItems.push(newItem);\r\n        countISO = 0;\r\n      }\r\n    }\r\n    return newItems;\r\n  }\r\n\r\n  paginate = (currentPage) => {\r\n    this.setState({\r\n      currentPage\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data, selectedItem, currentPage, itemsPerPage } = this.state;\r\n    \r\n    if(!data) {\r\n      return <div>Loading...</div>;\r\n    } \r\n    console.log(data);\r\n    // Get current items\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <section className=\"jumbotron main-section\">\r\n          <ItemList data={currentItems} \r\n                    onClickItem={this.getSelectedItem} \r\n                    itemsPerPage={itemsPerPage} \r\n                    totalItems={data.length} \r\n                    paginate={this.paginate}/>\r\n          <Chart selectedItem={selectedItem}/> \r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n    \r\n  };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}