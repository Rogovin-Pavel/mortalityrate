{"version":3,"sources":["components/data/read-text-file.js","components/pagination/index.js","components/pagination/pagination.js","components/item-list/index.js","components/item-list/item-list.js","components/chart/index.js","components/chart/chart.js","components/app/index.js","components/app/app.js","index.js"],"names":["readTextFile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","data","wrap","_context","prev","next","fetch","sent","ok","Error","concat","status","json","abrupt","stop","apply","this","arguments","Pagination","itemsPerPage","totalItems","paginate","paginationNumber","pageINC","pageDEC","currentPage","pageNumbers","maxPages","minPages","totalPages","Math","ceil","i","push","react_default","createElement","className","onClick","map","number","classNames","key","ItemList","onClickItem","components_pagination","item","Chart","state","chartData","prevProps","selectedItem","props","setState","countryName","es","width","height","options","title","display","text","fontSize","legend","position","Component","App","getSelectedItem","id","_this","length","console","log","getData","then","transformData","jointISO","newItem","newData","countISO","newItems","COLORS","labels","ISO","uuid","datasets","label","backgroundColor","_ref2","_this$state","indexOfLastItem","indexOfFirstItem","currentItems","slice","components_item_list","components_chart","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.bce3b41d.chunk.js","sourcesContent":["const readTextFile = async () => { \r\n    const res = await fetch(`./data.json`);\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch` +\r\n          `, received ${res.status}`)\r\n      }\r\n    const data = await res.json();\r\n    return data['Country estimates'];\r\n};\r\n\r\nexport default readTextFile;","import Pagination from './pagination';\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport './pagination.css';\r\n\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate, paginationNumber, pageINC, pageDEC, currentPage }) => {\r\n  const pageNumbers = [];\r\n  let maxPages = currentPage + paginationNumber;\r\n  let minPages = currentPage;\r\n  let totalPages = Math.ceil(totalItems/itemsPerPage)\r\n\r\n  if(minPages > totalPages - paginationNumber) {\r\n    minPages = totalPages - paginationNumber;\r\n  }\r\n\r\n  if(maxPages > totalPages) {\r\n    maxPages = totalPages;\r\n  }\r\n\r\n  for(let i = minPages; i <= maxPages; i++) {\r\n    pageNumbers.push(i);\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\" >\r\n          <div onClick={() => pageDEC()} className=\"page-link\">&laquo;</div>\r\n        </li>\r\n        {pageNumbers.map((number) => {\r\n          let classNames = \"page-item\";\r\n          if(currentPage === number) {\r\n            classNames = \"page-item active\";\r\n          }\r\n          return (\r\n            <li key={number} className={classNames}>\r\n              <div onClick={() => paginate(number)} className=\"page-link\">{number}</div>\r\n            </li>\r\n          )\r\n        })}\r\n        <li className=\"page-item\" >\r\n          <div onClick={() => pageINC()} className=\"page-link\">&raquo;</div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n\r\n\r\n","import ItemList from './item-list';\r\n\r\nexport default ItemList;","import React from 'react';\r\nimport './item-list.css';\r\n\r\nimport Pagination from './../pagination';\r\n\r\nconst ItemList = ({ data, onClickItem, itemsPerPage, totalItems, paginate, pageINC, pageDEC, paginationNumber, currentPage }) => {\r\n  const listClassName = \"list-group-item d-flex justify-content-between align-items-center\";\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <Pagination \r\n        itemsPerPage={itemsPerPage} \r\n        totalItems={totalItems} \r\n        paginate={paginate} \r\n        paginationNumber={paginationNumber}\r\n        pageINC={pageINC}\r\n        pageDEC={pageDEC}\r\n        currentPage={currentPage}/>\r\n      <ul className=\"list-group\">\r\n        {data.map((item) => {\r\n          return <li className={listClassName} key={item['id']}\r\n                    onClick={() => onClickItem(item['id'])}>{`${item['countryName']}` }</li>\r\n        })}\r\n      </ul>\r\n      <Pagination \r\n        itemsPerPage={itemsPerPage} \r\n        totalItems={totalItems} \r\n        paginate={paginate} \r\n        paginationNumber={paginationNumber}\r\n        pageINC={pageINC}\r\n        pageDEC={pageDEC}\r\n        currentPage={currentPage}/>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default ItemList;","import Chart from './chart';\r\n\r\nexport default Chart;","import React, { Component } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport './chart.css';\r\nexport default class Chart extends Component {\r\n  state = {\r\n    chartData: null\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.selectedItem !== this.props.selectedItem) {\r\n      const { selectedItem } = this.props;\r\n\r\n      this.setState({\r\n        chartData: selectedItem\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { chartData } = this.state;\r\n    \r\n    if (!chartData) {\r\n      return (\r\n        <div className=\"chart text\">Select from the list, please.</div>\r\n      );\r\n    }\r\n    \r\n    const { countryName } = chartData;\r\n\r\n    return (\r\n      <div className=\"chart\">\r\n        <h4 className=\"text\">Country name: {countryName}</h4>\r\n        <Line data={chartData} \r\n                     width={3}\r\n                     height={2}\r\n                     options={{\r\n                       title: {\r\n                         display: true,\r\n                         text: 'Infant Mortality Rate',\r\n                         fontSize:25\r\n                       },\r\n                       legend: {\r\n                         display: true,\r\n                         position: 'right'\r\n                       }\r\n                     }}/>\r\n      </div>\r\n    )\r\n  }\r\n};","import App from './app';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport './app.css';\r\nimport readTextFile from './../data/read-text-file';\r\nimport uuid from 'uuid';\r\n\r\nimport ItemList from './../item-list';\r\nimport Chart from './../chart';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    data: null,\r\n    selectedItem: null,\r\n    currentPage: 1, \r\n    itemsPerPage: 12,\r\n    paginationNumber: 10\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getSelectedItem = (id) => {\r\n    const { data } = this.state;\r\n    let selectedItem;\r\n\r\n    for(let i = 0; i < data.length; i++) {\r\n      console.log(data)\r\n      if(data[i].id === id) {\r\n        selectedItem = data[i];\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      selectedItem\r\n    });\r\n  }\r\n\r\n  getData = () => {\r\n    readTextFile()\r\n      .then((data) => {\r\n        this.setState({\r\n          data: this.transformData(data)\r\n        });\r\n      });\r\n  }\r\n\r\n  transformData = (data) => {\r\n    let jointISO, newItem, newData;\r\n    let countISO = 0;\r\n    let newItems = [];\r\n    const COLORS = ['#E74C3C', 'white', 'rgb(226, 226, 23)'];\r\n    for (let i = 0; i < data.length; i++) {\r\n\r\n      newData = [\r\n        data[i]['2010'],\r\n        data[i]['2011'],\r\n        data[i]['2012'],\r\n        data[i]['2013'],\r\n        data[i]['2014'],\r\n        data[i]['2015'],\r\n        data[i]['2016'],\r\n        data[i]['2017']\r\n      ];\r\n\r\n      if(data[i]['ISO Code'] !== jointISO) {\r\n\r\n        jointISO = data[i]['ISO Code'];\r\n        \r\n        newItem = {\r\n          labels: ['2010 year', '2011 year', '2012 year', '2013 year', '2014 year', '2015 year', '2016 year', '2017 year'],\r\n          countryName: data[i]['Country Name'],\r\n          ISO: data[i]['ISO Code'],\r\n          id: uuid(),\r\n          datasets: [\r\n            {\r\n              label: `IMR (${data[i]['Uncertainty bounds*']})`,\r\n              data: newData,\r\n              backgroundColor: COLORS[countISO]\r\n            }\r\n          ]\r\n        }\r\n      } else {\r\n        newItem['datasets'].push({\r\n          label: `IMR (${data[i]['Uncertainty bounds*']})`,\r\n          data: newData,\r\n          backgroundColor: COLORS[countISO]\r\n        });\r\n      }\r\n      countISO++\r\n      if(data[i]['Uncertainty bounds*'] === 'Upper') {\r\n        newItems.push(newItem);\r\n        countISO = 0;\r\n      }\r\n    }\r\n    return newItems;\r\n  }\r\n\r\n  paginate = (currentPage) => {\r\n    this.setState({\r\n      currentPage\r\n    });\r\n  }\r\n\r\n  pageINC = () => {\r\n    this.setState(({currentPage, data, itemsPerPage, paginationNumber}) => {\r\n      if(currentPage < data.length/itemsPerPage){\r\n        return {\r\n          currentPage: currentPage + 1,\r\n          \r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  pageDEC = () => {\r\n    this.setState(({currentPage}) => {\r\n      if(currentPage > 1) {\r\n        return {\r\n          currentPage: currentPage - 1,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data, selectedItem, currentPage, itemsPerPage, paginationNumber } = this.state;\r\n    \r\n    if(!data) {\r\n      return <div>Loading...</div>;\r\n    } \r\n    \r\n    // Get current items\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    return (\r\n      <main className=\"container\">\r\n        <section className=\"jumbotron main-section\">\r\n          <ItemList data={currentItems} \r\n                    onClickItem={this.getSelectedItem} \r\n                    itemsPerPage={itemsPerPage} \r\n                    totalItems={data.length} \r\n                    paginate={this.paginate}\r\n                    paginationNumber={paginationNumber}\r\n                    pageINC={this.pageINC}\r\n                    pageDEC={this.pageDEC}\r\n                    currentPage={currentPage}/>\r\n          <Chart selectedItem={selectedItem}/> \r\n        </section>\r\n      </main>\r\n    );\r\n  }\r\n    \r\n  };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}